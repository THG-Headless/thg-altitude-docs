---
import PageLayout from '../../../layouts/PageLayout.astro';
import ProductHero from '../../../components/ProductHero.astro';

const features = [
  {
    title: "GraphQL API",
    description: "Modern, flexible API with built-in documentation and type safety",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 2l10 6v8l-10 6-10-6V8l10-6z"/><path d="M12 22v-6"/><path d="M2 8l10 6 10-6"/><path d="M12 2v6l10 6"/><path d="M12 2v6l-10 6"/></svg>`
  },
  {
    title: "Commerce Core",
    description: "Essential commerce functionality including cart, checkout, and order management",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M4 7h16M4 12h16M4 17h16"/></svg>`
  },
  {
    title: "Extensible",
    description: "Custom resolvers and extensions to adapt the API to your needs",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 6v12m-6-6h12"/></svg>`
  },
  {
    title: "Performance",
    description: "Optimized resolvers and caching for fast response times",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M13 10V3L4 14h7v7l9-11h-7z"/></svg>`
  }
];

const resources = [
  {
    title: "Documentation",
    description: "Learn how to integrate with Commerce API",
    href: "/docs/commerce-api",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"/></svg>`
  },
  {
    title: "API Reference",
    description: "Explore the GraphQL schema and types",
    href: "/docs/commerce-api/reference",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4"/></svg>`
  },
  {
    title: "Examples",
    description: "View sample implementations and use cases",
    href: "/docs/commerce-api/examples",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2"><path d="M4 5a1 1 0 011-1h14a1 1 0 011 1v14a1 1 0 01-1 1H5a1 1 0 01-1-1V5z"/></svg>`
  }
];

const highlights = [
  {
    title: "Type-Safe",
    description: "Built-in TypeScript support and GraphQL schema validation"
  },
  {
    title: "Flexible",
    description: "Customize and extend the API to match your needs"
  },
  {
    title: "Scalable",
    description: "Designed for high-performance commerce workloads"
  },
  {
    title: "Modern",
    description: "GraphQL-first approach with rich developer tools"
  }
];
---

<PageLayout
  title="Commerce API"
  description="Build commerce experiences with our powerful GraphQL API"
>
  <ProductHero
    title="Commerce API"
    description="A powerful GraphQL API that provides all the commerce functionality you need. Build custom storefronts, mobile apps, or any commerce experience you can imagine."
    icon="/icons/commerce-api.svg"
    primaryAction={{
      text: "Get Started",
      href: "/docs/commerce-api"
    }}
    secondaryAction={{
      text: "View API Reference",
      href: "/docs/commerce-api/reference"
    }}
    highlights={highlights}
  />

  <!-- Features -->
  <div class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
    <div class="grid sm:grid-cols-2 lg:grid-cols-4 items-center gap-12">
      {features.map(feature => (
        <div class="text-center">
          <div class="flex justify-center items-center w-12 h-12 bg-primary-500/10 rounded-xl mx-auto text-primary-600 dark:text-primary-400">
            <Fragment set:html={feature.icon} />
          </div>
          <div class="mt-3">
            <h3 class="text-lg font-semibold text-stone-800 dark:text-stone-200">
              {feature.title}
            </h3>
            <p class="mt-1 text-stone-600 dark:text-stone-400">
              {feature.description}
            </p>
          </div>
        </div>
      ))}
    </div>
  </div>

  <!-- Resources -->
  <div class="max-w-[85rem] px-4 py-10 sm:px-6 lg:px-8 lg:py-14 mx-auto">
    <div class="max-w-2xl mx-auto text-center mb-10">
      <h2 class="text-2xl font-bold md:text-3xl dark:text-white">Resources</h2>
      <p class="mt-3 text-stone-600 dark:text-stone-400">Everything you need to build with Commerce API.</p>
    </div>

    <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-6">
      {resources.map(resource => (
        <a class="group flex flex-col h-full bg-white border shadow-sm rounded-xl hover:shadow-md transition dark:bg-stone-900 dark:border-stone-800" href={resource.href}>
          <div class="p-4 md:p-5">
            <div class="flex items-center gap-4">
              <div class="flex justify-center items-center w-8 h-8 bg-primary-500/10 rounded-lg text-primary-600 dark:text-primary-400">
                <Fragment set:html={resource.icon} />
              </div>
              <div class="grow">
                <h3 class="group-hover:text-primary-600 font-semibold text-stone-800 dark:group-hover:text-primary-500 dark:text-stone-200">
                  {resource.title}
                </h3>
                <p class="text-sm text-stone-600 dark:text-stone-400">
                  {resource.description}
                </p>
              </div>
              <div class="flex-shrink-0 text-stone-400 group-hover:text-primary-600 dark:group-hover:text-primary-500">
                <svg class="w-5 h-5" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m9 18 6-6-6-6"/></svg>
              </div>
            </div>
          </div>
        </a>
      ))}
    </div>
  </div>
</PageLayout>