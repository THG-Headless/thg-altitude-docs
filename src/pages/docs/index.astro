---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';
import { products } from '../../config/products';

// Get all product index docs
const docs = await getCollection('docs');
const productIndexDocs = docs.filter(doc => doc.id.endsWith('/index.mdx') || doc.id.endsWith('/index.md'));

// Group docs by product
const productDocs = productIndexDocs.reduce((acc, doc) => {
  const productId = doc.id.split('/')[0];
  acc[productId] = doc;
  return acc;
}, {} as Record<string, any>);

// Get available products that have documentation
const availableProducts = Object.keys(products)
  .filter(productId => productDocs[productId])
  .map(productId => ({
    ...products[productId],
    doc: productDocs[productId]
  }));
---

<BaseLayout title="Documentation">
  <div class="container px-4 lg:px-0 mx-auto px-4 sm:px-6 lg:px-8">
    <header class="py-16 sm:text-center">
      <h1 class="mb-4 text-3xl sm:text-4xl tracking-tight text-stone-100">THG Altitude Documentation</h1>
      <p class="text-lg text-stone-400 font-light">
        Comprehensive guides and references for all THG Altitude products
      </p>
    </header>

    <div class="max-w-5xl mx-auto pb-20">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {availableProducts.map(product => (
          <a 
            href={`/docs/${product.id}`}
            class="group relative bg-stone-900/50 hover:bg-stone-900 rounded-lg p-8 transition-all duration-200"
          >
            <div class="flex items-center gap-4 mb-4">
              <div class="flex-shrink-0 flex items-center justify-center w-12 h-12 rounded-lg bg-stone-800 group-hover:bg-stone-700 transition-colors">
                <img src={product.icon} alt="" class="w-6 h-6" />
              </div>
              <div class="flex items-center gap-3">
                <h3 class="text-[1.2rem] text-stone-100">
                  {product.name}
                </h3>
                {product.status && (
                  <span class={`px-2 py-1 rounded text-xs ${
                    product.status === 'live' ? 'bg-green-500/10 text-green-500' :
                    product.status === 'beta' ? 'bg-blue-500/10 text-blue-500' :
                    product.status === 'alpha' ? 'bg-yellow-500/10 text-yellow-500' :
                    'bg-purple-500/10 text-purple-500'
                  }`}>
                    {product.status === 'live' ? 'Live' :
                     product.status === 'beta' ? 'Beta' :
                     product.status === 'alpha' ? 'Alpha' :
                     'Coming Q2'}
                  </span>
                )}
              </div>
            </div>
            <p class="text-stone-400 group-hover:text-stone-300 transition-colors mb-4">
              {product.description}
            </p>
            <div class="absolute top-8 right-8 text-stone-500 group-hover:text-stone-400 transition-colors">
              <svg class="w-5 h-5" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd" />
              </svg>
            </div>
          </a>
        ))}
      </div>
    </div>
  </div>
</BaseLayout>