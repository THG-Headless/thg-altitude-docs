---
import DocsLayout from '../../../../../layouts/DocsLayout.astro';
import DocsSidebar from '../../../../../components/DocsSidebar.astro';
import { getCollection, type CollectionEntry } from 'astro:content';

const docs = await getCollection('docs');
const productDoc = docs.find((doc: CollectionEntry<'docs'>) => doc.id === 'commerce-api/examples/product/index.mdx');

const product = {
  id: "commerce-api",
  name: "Commerce API",
  description: "Build commerce experiences with our powerful GraphQL API",
  icon: "/icons/commerce-api.svg",
  quickLinks: [
    {
      title: "Overview",
      href: "/products/commerce-api"
    },
    {
      title: "Documentation",
      href: "/docs/commerce-api"
    },
    {
      title: "Examples",
      href: "/docs/commerce-api/examples"
    }
  ]
};

const { Content, headings } = productDoc ? await productDoc.render() : { Content: null, headings: [] };
---

{productDoc ? (
  <DocsLayout
    title={productDoc.data.title}
    description={productDoc.data.description}
    product={product}
    headings={headings}
  >
    <DocsSidebar slot="sidebar" product={product} />
    <Content />
  </DocsLayout>
) : (
  <DocsLayout
    title="Product Examples"
    description="Examples for working with products in Commerce API"
    product={product}
  >
    <DocsSidebar slot="sidebar" product={product} />
    <h1>Product Examples</h1>
    <p>This section contains examples for working with products in Commerce API.</p>
    
    <h2>Available Examples</h2>
    <ul>
      <li><a href="/docs/commerce-api/examples/product/reviews">Product Reviews</a></li>
    </ul>
    
    <h2>Product Data</h2>
    <p>Commerce API provides comprehensive product data, including:</p>
    <ul>
      <li>Basic product information (title, description, images)</li>
      <li>Pricing information</li>
      <li>Inventory status</li>
      <li>Product variants</li>
      <li>Product attributes</li>
      <li>Related products</li>
    </ul>
    
    <p>The examples in this section demonstrate how to retrieve and display product data using Commerce API.</p>
  </DocsLayout>
)}