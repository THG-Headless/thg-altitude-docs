---
import BaseLayout from './BaseLayout.astro';

interface Props {
  title: string;
  description?: string;
  pubDate?: Date;
  author?: string;
  image?: string;
  tags?: string[];
}

const { title, description, pubDate, author, image, tags } = Astro.props;

// Format date
const formattedDate = pubDate ? new Intl.DateTimeFormat('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
}).format(pubDate) : null;
---

<BaseLayout {title} {description}>
  <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <article class="prose prose-invert max-w-none">
      {image ? (
        <div class="mb-8 -mx-4 sm:-mx-6 lg:-mx-8 overflow-hidden rounded-lg">
          <img src={image} alt={title} class="w-full h-64 sm:h-80 object-cover" />
        </div>
      ) : (
        <div class="mb-8 -mx-4 sm:-mx-6 lg:-mx-8 overflow-hidden rounded-lg bg-gradient-to-br from-stone-100 to-stone-200 dark:from-stone-800 dark:to-stone-900 flex items-center justify-center h-48 sm:h-64">
          <div class="text-center p-6">
            <svg class="w-16 h-16 mx-auto text-stone-400 dark:text-stone-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
            </svg>
            <p class="mt-2 text-sm text-stone-500 dark:text-stone-400">Altitude Blog</p>
          </div>
        </div>
      )}
      
      <header class="mb-8">
        <h1 class="text-4xl text-white mb-4">{title}</h1>
        
        <div class="flex flex-wrap items-center text-stone-500 dark:text-stone-400 text-sm">
          {formattedDate && (
            <div class="flex items-center mr-6 mb-2">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
              </svg>
              <span>{formattedDate}</span>
            </div>
          )}
          
          {author && (
            <div class="flex items-center mr-6 mb-2">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
              </svg>
              <span>{author}</span>
            </div>
          )}
        </div>
        
        {tags && tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mt-4">
            {tags.map(tag => (
              <a href={`/blog/tag/${tag}`} class="inline-block px-3 py-1 text-xs bg-stone-100 dark:bg-stone-800 text-stone-700 dark:text-stone-300 rounded-full hover:bg-stone-200 dark:hover:bg-stone-700 transition-colors">
                #{tag}
              </a>
            ))}
          </div>
        )}
      </header>
      
      <div class="blog-content">
        <slot />
      </div>
      
      <div class="mt-12 pt-8 border-t border-stone-200 dark:border-stone-800">
        <a href="/blog" class="inline-flex items-center text-stone-600 dark:text-stone-400 hover:text-stone-900 dark:hover:text-stone-200">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
          </svg>
          Back to all posts
        </a>
      </div>
    </article>
  </div>
</BaseLayout>