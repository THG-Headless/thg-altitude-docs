---
import "@styles/elements/facets.css";
import facetData from "@components/docs/facets/facetData.json";
import {
  FacetWrapper,
  FacetResults,
  FacetList,
  FacetRange,
  FacetSearch,
  FacetSlider,
  FacetTabs,
} from "@thg-altitude/elements/astro";
import { validateFacets } from "@thg-altitude/elements/facets/helper";

const validFacets = validateFacets(facetData?.productList?.facets);
const numberOfProducts = facetData?.productList?.total;
---

<div class="no-prose">
  <FacetWrapper
    filterName="facetFilters"
    options={{
      endpoint: "/api/graphql",
      pageType: "search",
      query: "blue",
      shippingDestination: "GB",
      currency: "GBP",
    }}
    currencySymbol="£"
  >
    <div class="xl:block hidden">
      <FacetResults
        id="desktop"
        facetPayload={validFacets}
        hydrateOptions="visible"
        singleActiveFacet="true"
        facetRenderCount={5}
        visibleOptions="*"
        text={{
          toggle: "+ Filters",
        }}
      >
        <FacetList slot="facet-list" text={{ clear: "Clear" }}>
          <div slot="elements-facet-options-header">
            <p>
              <span facet-inject="facet-selected-count"></span>{" "}
              Selected
            </p>
            <p facet-inject="facet-selections"></p>
          </div>
        </FacetList>
        <FacetRange slot="facet-range" text={{ clear: "Clear" }}>
          <div slot="elements-facet-options-header">
            <p>
              <span facet-inject="facet-selected-count"></span>{" "}
              Selected
            </p>
          </div>
        </FacetRange>
        <FacetSlider
          slot="facet-slider"
          text={{
            clear: "Clear",
            currency: "£",
            apply: "Apply",
          }}
        />
        <FacetSearch slot="facet-search" text={{ clear: "Clear" }}>
          <div slot="elements-facet-options-header">
            <p>
              <span facet-inject="facet-selected-count"></span>{" "}
              Selected
            </p>
          </div>
        </FacetSearch>
        <FacetTabs slot="facet-tabs-end" text={{ clear: "Clear All" }} />
      </FacetResults>
    </div>

    <div class="xl:hidden">
      <button
        id="mobile-facet-trigger"
        class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded-md mt-2"
        onclick="complexModal.showModal()"
        aria-haspopup="dialog">Open Filters</button
      >
      <dialog
        id="complexModal"
        class="modal modal-fullscreen modal-fullscreen-mobile"
        role="dialog"
        aria-modal="true"
        aria-label="Fullscreen Modal"
      >
        <div class="modal-box min-h-screen h-screen bg-white">
          <form method="dialog" class="modal-control-bar">
            <button class="modal-close-button">
              <span>Close</span>
              <span aria-hidden="true">✕</span>
            </button>
          </form>
          <FacetResults
            id="mobile"
            facetPayload={validFacets}
            keepSelectedGroupActive={false}
            singleActiveFacet={false}
          >
            <FacetList slot="facet-list" text={{ clear: "Clear" }}>
              <div
                slot="elements-facet-options-header"
                class="flex w-full flex-col gap-2"
              >
                <h3
                  class="bold flex border-b pb-2 text-lg"
                  facet-inject="facet-group-name-display"
                >
                </h3>
              </div>
            </FacetList>
            <FacetRange slot="facet-range" text={{ clear: "Clear" }}>
              <div
                slot="elements-facet-options-header"
                class="flex w-full flex-col gap-2"
              >
                <h3
                  class="bold flex border-b pb-2 text-lg"
                  facet-inject="facet-group-name-display"
                >
                </h3>
              </div>
            </FacetRange>
            <FacetSlider
              slot="facet-slider"
              text={{
                clear: "Clear",
                currency: "£",
                apply: "Apply",
              }}
            >
              <div
                slot="elements-facet-options-header"
                class="flex w-full flex-col gap-2"
              >
                <h3
                  class="bold flex border-b pb-2 text-lg"
                  facet-inject="facet-group-name-display"
                >
                </h3>
              </div>
            </FacetSlider>
            <FacetSearch slot="facet-search" text={{ clear: "Clear" }}>
              <div
                slot="elements-facet-options-header"
                class="flex w-full flex-col gap-2"
              >
                <h3
                  class="bold flex border-b pb-2 text-lg"
                  facet-inject="facet-group-name-display"
                >
                </h3>
              </div>
            </FacetSearch>
            <FacetTabs slot="facet-tabs-start" text={{ clear: "Clear All" }} />
            <span slot="facet-button" facet-inject="facet-selections"></span>
          </FacetResults>
          <form
            method="dialog"
            class="modal-control-bar pb-0 block mt-auto w-full"
          >
            <button
              id="view-products-button"
              class="bg-blue-950 rounded text-white w-full p-2"
            >
              {
                numberOfProducts > 1
                  ? `View ${numberOfProducts} Products`
                  : `View ${numberOfProducts} Product`
              }
            </button>
          </form>
        </div>
      </dialog>
    </div>
  </FacetWrapper>
</div>

<script>
  class ElementsFacetWrapper extends HTMLElement {
    constructor() {
      super();
      this.extractSSRContext = this.extractSSRContext.bind(this);
    }

    async connectedCallback() {
      window.addEventListener("elements-facet-wrapper", this.extractSSRContext);
    }

    toggleFacet(facetOpen: boolean) {
      const facetToggleSlot = this.querySelector(
        ".elements-facets-more-filters-toggle"
      );
      if (facetToggleSlot) {
        facetToggleSlot.innerHTML = `${!facetOpen ? "+ Filters" : "- Filters"}`;
      }
    }

    async extractSSRContext() {
      window.removeEventListener(
        "elements-facet-wrapper",
        this.extractSSRContext
      );
      const observer = window.elements.facets.observer;

      observer.subscribe("facet-toggle", (facetOpen: boolean) => {
        this.toggleFacet(facetOpen);
      });
    }
  }

  customElements.get("elements-facet-wrapper") ||
    customElements.define("elements-facet-wrapper", ElementsFacetWrapper);
</script>
